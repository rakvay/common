Арундел Д., Домингус Д. - Kubernetes для DevOps - 2020.pdf
https://grenka.ua/366125/kubernetes-dlya-devops-razvertyvanie-zapusk-i-masshtabirovanie-v-oblake
*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************

*************************************************************
Глава 13
Процесс разработки

Если выбрать RollingUpdate, pod-оболочки будут обновляться по очереди до тех пор, пока все реплики не перейдут на новую версию:
apiVersion: extensions/v1beta1
kind: Deployment
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    
В режиме Recreate все запущенные реплики удаляются одновременно, а потом создаются новые. Это вполне приемлемо для приложений, которые не обрабатывают запросы напрямую. Одним из преимуществ данной стратегии является то, что она исключает ситуацию с параллельной работой двух разных версий одного приложения

-  Стратегия развертывания RollingUpdate, которая применяется в Kubernetes по умолчанию, обновляет одновременно лишь несколько pod-оболочек, останавливая старые версии только после того, как новые будут готовы к работе.
-  Плавающие обновления позволяют избежать простоя, но при этом страдает скорость выкатывания. Это также означает, что во время выкатывания у вас будут параллельно работать как старые, так и новые версии приложения.
-  Вы можете откорректировать плавающие обновления с помощью полей maxSurge и maxUnavailable. В зависимости от используемой вами версии API Kubernetes значения по умолчанию могут соответствовать или не соответствовать вашей ситуации.
-  Стратегия Recreate просто убирает все старые pod-оболочки и одновременно с этим запускает их новые версии. Это быстрый процесс, но он приводит к простою, что не подходит для приложений, которые взаимодействуют с пользователями
- При blue-green развертывании все новые под-оболочки запускаются и готовятся к работе, не получая никакого трафика. Затем к ним перенаправляется весь трафик, еще до удаления стары версий
- Rainbow-развертывания похожи на blue-green развертывания, но допускают наличие более двух версий 
- Хуки Helm позволяют применять определенные ресурсы Kubernetes на той или иной стадии развертывания: например, чтобы выполнить миграцию базы данных
- Хуки могут определять порядок, в котором ресурсы должны применяться в ходе развертывания и останавливать выкатывание если что-то пойдет не так
- 
- 
- 
*************************************************************
